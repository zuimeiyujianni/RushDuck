<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rushduck.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="com.rushduck.bean.User">
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="CHAR" property="password" />
    <result column="salt" jdbcType="CHAR" property="salt" />
    <result column="phonenumber" jdbcType="CHAR" property="phonenumber" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="emotion" jdbcType="VARCHAR" property="emotion" />
    <result column="bloodtype" jdbcType="VARCHAR" property="bloodtype" />
    <result column="signature" jdbcType="VARCHAR" property="signature" />
    <result column="wechat" jdbcType="VARCHAR" property="wechat" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="authenticated" jdbcType="BIT" property="authenticated" />
    <result column="level" jdbcType="SMALLINT" property="level" />
    <result column="vip" jdbcType="SMALLINT" property="vip" />
    <result column="portraitId" jdbcType="INTEGER" property="portraitid" />
    <result column="musicId" jdbcType="INTEGER" property="musicid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, username, password, salt, phonenumber, admin, sex, school, emotion, bloodtype, 
    signature, wechat, qq, email, name, birthday, authenticated, level, vip, portraitId, 
    musicId
  </sql>
  <select id="selectByExample" parameterType="com.rushduck.bean.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <!-- wanggongsheng自己书写的 -->
  <select id="selectAllUsers" resultType="com.rushduck.bean.User">
  	 select * from user
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rushduck.bean.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rushduck.bean.User">
    insert into user (userId, username, password, 
      salt, phonenumber, admin, sex, 
      school, emotion, bloodtype, 
      signature, wechat, qq, 
      email, name, birthday, 
      authenticated, level, vip, 
      portraitId, musicId)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=CHAR}, 
      #{salt,jdbcType=CHAR}, #{phonenumber,jdbcType=CHAR}, #{admin,jdbcType=BIT}, #{sex,jdbcType=CHAR}, 
      #{school,jdbcType=VARCHAR}, #{emotion,jdbcType=VARCHAR}, #{bloodtype,jdbcType=VARCHAR}, 
      #{signature,jdbcType=VARCHAR}, #{wechat,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{authenticated,jdbcType=BIT}, #{level,jdbcType=SMALLINT}, #{vip,jdbcType=SMALLINT}, 
      #{portraitid,jdbcType=INTEGER}, #{musicid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.rushduck.bean.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="salt != null">
        salt,
      </if>
      <if test="phonenumber != null">
        phonenumber,
      </if>
      <if test="admin != null">
        admin,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="emotion != null">
        emotion,
      </if>
      <if test="bloodtype != null">
        bloodtype,
      </if>
      <if test="signature != null">
        signature,
      </if>
      <if test="wechat != null">
        wechat,
      </if>
      <if test="qq != null">
        qq,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="authenticated != null">
        authenticated,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="vip != null">
        vip,
      </if>
      <if test="portraitid != null">
        portraitId,
      </if>
      <if test="musicid != null">
        musicId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        #{salt,jdbcType=CHAR},
      </if>
      <if test="phonenumber != null">
        #{phonenumber,jdbcType=CHAR},
      </if>
      <if test="admin != null">
        #{admin,jdbcType=BIT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="emotion != null">
        #{emotion,jdbcType=VARCHAR},
      </if>
      <if test="bloodtype != null">
        #{bloodtype,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        #{signature,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="authenticated != null">
        #{authenticated,jdbcType=BIT},
      </if>
      <if test="level != null">
        #{level,jdbcType=SMALLINT},
      </if>
      <if test="vip != null">
        #{vip,jdbcType=SMALLINT},
      </if>
      <if test="portraitid != null">
        #{portraitid,jdbcType=INTEGER},
      </if>
      <if test="musicid != null">
        #{musicid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.rushduck.bean.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=CHAR},
      </if>
      <if test="record.salt != null">
        salt = #{record.salt,jdbcType=CHAR},
      </if>
      <if test="record.phonenumber != null">
        phonenumber = #{record.phonenumber,jdbcType=CHAR},
      </if>
      <if test="record.admin != null">
        admin = #{record.admin,jdbcType=BIT},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.emotion != null">
        emotion = #{record.emotion,jdbcType=VARCHAR},
      </if>
      <if test="record.bloodtype != null">
        bloodtype = #{record.bloodtype,jdbcType=VARCHAR},
      </if>
      <if test="record.signature != null">
        signature = #{record.signature,jdbcType=VARCHAR},
      </if>
      <if test="record.wechat != null">
        wechat = #{record.wechat,jdbcType=VARCHAR},
      </if>
      <if test="record.qq != null">
        qq = #{record.qq,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=DATE},
      </if>
      <if test="record.authenticated != null">
        authenticated = #{record.authenticated,jdbcType=BIT},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=SMALLINT},
      </if>
      <if test="record.vip != null">
        vip = #{record.vip,jdbcType=SMALLINT},
      </if>
      <if test="record.portraitid != null">
        portraitId = #{record.portraitid,jdbcType=INTEGER},
      </if>
      <if test="record.musicid != null">
        musicId = #{record.musicid,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set userId = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=CHAR},
      salt = #{record.salt,jdbcType=CHAR},
      phonenumber = #{record.phonenumber,jdbcType=CHAR},
      admin = #{record.admin,jdbcType=BIT},
      sex = #{record.sex,jdbcType=CHAR},
      school = #{record.school,jdbcType=VARCHAR},
      emotion = #{record.emotion,jdbcType=VARCHAR},
      bloodtype = #{record.bloodtype,jdbcType=VARCHAR},
      signature = #{record.signature,jdbcType=VARCHAR},
      wechat = #{record.wechat,jdbcType=VARCHAR},
      qq = #{record.qq,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      birthday = #{record.birthday,jdbcType=DATE},
      authenticated = #{record.authenticated,jdbcType=BIT},
      level = #{record.level,jdbcType=SMALLINT},
      vip = #{record.vip,jdbcType=SMALLINT},
      portraitId = #{record.portraitid,jdbcType=INTEGER},
      musicId = #{record.musicid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.rushduck.bean.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=CHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=CHAR},
      </if>
      <if test="phonenumber != null">
        phonenumber = #{phonenumber,jdbcType=CHAR},
      </if>
      <if test="admin != null">
        admin = #{admin,jdbcType=BIT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="school != null">
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="emotion != null">
        emotion = #{emotion,jdbcType=VARCHAR},
      </if>
      <if test="bloodtype != null">
        bloodtype = #{bloodtype,jdbcType=VARCHAR},
      </if>
      <if test="signature != null">
        signature = #{signature,jdbcType=VARCHAR},
      </if>
      <if test="wechat != null">
        wechat = #{wechat,jdbcType=VARCHAR},
      </if>
      <if test="qq != null">
        qq = #{qq,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="authenticated != null">
        authenticated = #{authenticated,jdbcType=BIT},
      </if>
      <if test="level != null">
        level = #{level,jdbcType=SMALLINT},
      </if>
      <if test="vip != null">
        vip = #{vip,jdbcType=SMALLINT},
      </if>
      <if test="portraitid != null">
        portraitId = #{portraitid,jdbcType=INTEGER},
      </if>
      <if test="musicid != null">
        musicId = #{musicid,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rushduck.bean.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=CHAR},
      salt = #{salt,jdbcType=CHAR},
      phonenumber = #{phonenumber,jdbcType=CHAR},
      admin = #{admin,jdbcType=BIT},
      sex = #{sex,jdbcType=CHAR},
      school = #{school,jdbcType=VARCHAR},
      emotion = #{emotion,jdbcType=VARCHAR},
      bloodtype = #{bloodtype,jdbcType=VARCHAR},
      signature = #{signature,jdbcType=VARCHAR},
      wechat = #{wechat,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      authenticated = #{authenticated,jdbcType=BIT},
      level = #{level,jdbcType=SMALLINT},
      vip = #{vip,jdbcType=SMALLINT},
      portraitId = #{portraitid,jdbcType=INTEGER},
      musicId = #{musicid,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>